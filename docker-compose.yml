version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5001
    depends_on:
      - wallet-api-service
    networks:
      - app-network

  wallet-api-service:
    build:
      context: ./wallet-api-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
      - DB_SERVICE_URL=http://db-api:5002
    depends_on:
      - db-api
    networks:
      - app-network
    restart: always

  db-api:
    build:
      context: ./wallet-db-service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - DB_HOST=postgres
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wallet_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wallet_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local